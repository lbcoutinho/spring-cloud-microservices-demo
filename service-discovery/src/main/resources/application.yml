# References about EMERGENCY! red message on Eureka dashboard
# - https://github.com/spring-cloud/spring-cloud-netflix/issues/1322
# - https://github.com/Netflix/eureka/wiki/Server-Self-Preservation-Mode

# This default profile is used when running a single instance completely standalone
spring:
  profiles: default
  application:
    name: service-discovery
server:
  port: 8761
eureka:
  client:
    registerWithEureka: false
    fetchRegistry: false
# Uncomment eureka.instance.hostname and eureka.client.serviceUrl to define a hostname for the eureka server
#  instance:
#    hostname: eureka-server.com
#    serviceUrl:
#      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/

---
# united-states, brazil and china illustrate running 3 intercommunicating instances.
# This example has them running side-by-side on localhost which is unrealistic in production, but does illustrate how multiple instances collaborate.
#
# Add the following configuration snippet in "C:\Windows\System32\drivers\etc\hosts"
#  127.0.0.1       eureka-server.com
#  127.0.0.1       eureka-server-us.com
#  127.0.0.1       eureka-server-br.com
#  127.0.0.1       eureka-server-cn.com

# Run by opening 3 separate command prompts:
# java -jar -Dspring.profiles.active=us service-discovery.jar
# java -jar -Dspring.profiles.active=br service-discovery.jar
# java -jar -Dspring.profiles.active=cn service-discovery.jar

# For production environments it's recommended to setup Eureka using DNS instead of pre-defined hostnames

spring:
  profiles: us
  application:
    name: service-discovery-clustered
server:
  port: 8761
eureka:
  instance:
    hostname: eureka-server-us.com
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://eureka-server-br.com:8762/eureka/,http://eureka-server-cn.com:8763/eureka/

---
spring:
  profiles: br
  application:
    name: service-discovery-clustered
server:
  port: 8762
eureka:
  instance:
    hostname: eureka-server-br.com
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://eureka-server-us.com:8761/eureka/,http://eureka-server-cn.com:8763/eureka/

---
spring:
  profiles: cn
  application:
    name: service-discovery-clustered
server:
  port: 8763
eureka:
  instance:
    hostname: eureka-server-cn.com
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://eureka-server-us.com:8761/eureka/,http://eureka-server-br.com:8762/eureka/